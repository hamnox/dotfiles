filetype plugin on
filetype indent on

call pathogen#infect()
call pathogen#helptags()

set guioptions-=m " turn off menu bar
set guioptions-=T " turn off toolbar

" pythony tabs
set autoindent smarttab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab
set backspace=indent,eol,start " defaults to eol,start iirc

" line numbers
set number

" highlight the current line on the current window with underline
autocmd VimEnter * set cul
augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cul
    autocmd WinLeave * set nocul
augroup END

set history=50000 " increase history 'cause I like lots of it

set hlsearch  " I like to see my searches
set ignorecase  " ignore case when searching
set smartcase  " except when a capital letter is in the search
set ruler  " show the cursor position all the time
set laststatus=2  " helps show the file name
set incsearch

"set foldmethod=indent   "fold based on indent
set foldmethod=indent
set foldnestmax=100      "deepest fold is 10 levels

highlight Folded ctermbg=none ctermfg=DarkBlue cterm=none
set foldcolumn=0 " no fold indicator column next to line numbers
set foldtext=MyFoldText() " fancy fold text
function! MyFoldText()
    let line = v:foldstart
    let indent = indent(line)
    let indenttext = repeat(" ", indent) " take indent into account when displaying foldtext
    let text = indenttext . foldtext() 
    return text
endfunction
set fillchars="fold:"
highlight Folded ctermbg=none

if has("syntax")
  syntax enable
endif

set nowrap

" I like being able to scroll with the mouse, since it's so close-by
" on my laptop keyboard anyway
set mouse=a 
nnoremap <F3> :set mouse=a<CR>
nnoremap <F4> :set mouse=<CR>

" f2 to toggle paste mode
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

" color the normally confusing paren-highlight to a color that isn't too
" horribly prominent so I can actually tell what's what
highlight MatchParen cterm=NONE ctermbg=black ctermfg=darkblue

" for some reason after loading ~/.vimrc with `source ~/.vimrc` inside vim,
" everything gets highlighted. this works around that.

hi Search cterm=NONE ctermfg=grey ctermbg=darkblue
hi Visual cterm=NONE ctermfg=black ctermbg=darkyellow

autocmd VimEnter * if argc() == 0 | source ~/.vimrc_newsession | endif

hi Search cterm=NONE ctermfg=grey ctermbg=darkblue
hi Visual cterm=NONE ctermfg=black ctermbg=darkyellow

set timeout timeoutlen=1000 ttimeoutlen=100
vnoremap < <gv
vnoremap > >gv

set wildmode=longest:full,full
set wildmenu

let g:wingrab_last_buffer = -1
function! Wincp()
    let g:wingrab_last_buffer = bufnr("%")
endfunction

nnoremap ,u :call Wincp()<CR>:hide<CR><C-=><ESC><ESC>
nnoremap ,<S-U> :call Wincp()<CR><ESC><ESC>
nnoremap ,h :aboveleft vnew<CR>:execute "buffer! " . g:wingrab_last_buffer<CR><C-=><ESC><ESC>
nnoremap ,l :rightbelow vnew<CR>:execute "buffer! " . g:wingrab_last_buffer<CR><C-=><ESC><ESC>
nnoremap ,k :aboveleft new<CR>:execute "buffer! " . g:wingrab_last_buffer<CR><C-=><ESC><ESC>
nnoremap ,j :rightbelow new<CR>:execute "buffer! " . g:wingrab_last_buffer<CR><C-=><ESC><ESC>
nnoremap ,z :vnew \| setlocal syntax=<C-r>=&syntax<CR> \| r !git show HEAD:<C-r>=bufname("%")<CR><CR><ESC>:setlocal buftype=nofile bufhidden=wipe nobuflisted noswapfile nomodifiable<CR><ESC><ESC>
nnoremap ,r :e __nonexistantfile__ \| e <C-r>=bufname("%")<CR><CR>

noh
